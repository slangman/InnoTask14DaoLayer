DROP TABLE IF EXISTS course CASCADE ;
DROP TABLE IF EXISTS users CASCADE ;
DROP TABLE IF EXISTS role CASCADE ;
DROP TABLE IF EXISTS task CASCADE ;
DROP TABLE IF EXISTS grade CASCADE ;


CREATE TABLE role (
  id SERIAL NOT NULL CONSTRAINT role_pkey PRIMARY KEY,
  name VARCHAR(128) NOT NULL
);

CREATE TABLE users (
  id SERIAL NOT NULL CONSTRAINT user_pkey PRIMARY KEY,
  roleId INTEGER NOT NULL REFERENCES role(id),
  login VARCHAR(32) NOT NULL,
  password VARCHAR(128) NOT NULL ,
  fName VARCHAR(128),
  lName VARCHAR(128)
);

CREATE TABLE course (
  id SERIAL NOT NULL CONSTRAINT course_pkey PRIMARY KEY,
  name VARCHAR(128) NOT NULL,
  teacherId INTEGER NOT NULL REFERENCES users(id),
  description VARCHAR(1024)
);

DROP TABLE IF EXISTS studentsAtCourse;
CREATE TABLE studentsAtCourse (
  studentId INTEGER NOT NULL REFERENCES users(id),
  courseId INTEGER NOT NULL REFERENCES course(id)
);

CREATE TABLE task (
  id SERIAL NOT NULL CONSTRAINT task_pkey PRIMARY KEY,
  courseId INTEGER NOT NULL REFERENCES course(id),
  description VARCHAR(1024)
);

CREATE TABLE grade (
  id SERIAL NOT NULL,
  taskId INTEGER NOT NULL REFERENCES task(id),
  studentId INTEGER NOT NULL REFERENCES users(id),
  value INTEGER NOT NULL,
  PRIMARY KEY(taskId, studentId)
);